#!/bin/bash

#
# Backup and restore script for Crowbar
#
# 2013-2014, SUSE Linux Products GmbH
# Authors: {bwiedemann,jdsn}@suse.de
#

CHEFFILES="etc/chef var/lib/couchdb/chef.couch"
CROWBARFILES="etc/crowbar var/lib/crowbar"
TFTPFILES="srv/tftpboot/validation.pem srv/tftpboot/nodes"
ROOTFILES="root/.chef root/.ssh root/.gnupg"
BFILES="$ROOTFILES $CHEFFILES $CROWBARFILES $TFTPFILES"

EXCLUDEFILES="var/lib/crowbar/cache"
XFILES=""
for X in $EXCLUDEFILES ; do
  XFILES="--exclude $X $XFILES"
done

function backup()
{
  /etc/cron.daily/chef-couchdb-cleanup >/dev/null 2>&1 # to get smaller backups
  rccouchdb stop

  pushd / >/dev/null
  echo "backing up to $FILE..."
  tar -czf "$FILE" $XFILES $BFILES
  popd >/dev/null

  rccouchdb start
  rcchef-server restart
}

# to be used on an already deployed crowbar
function cleanup()
{
  pushd / >/dev/null
  for service in crowbar chef-{server,solr,expander,client} couchdb apache2 named dhcpd xinetd rabbitmq-server ; do
    [ -e /etc/init.d/$service ] && /etc/init.d/$service stop
  done
  killall epmd # part of rabbitmq
  killall looper_chef_client.sh
  LOGS=var/log/{crowbar,chef,couchdb,apache2}
  DEPLOYED="var/lib/chef etc/bind etc/dhcp3 etc/xinetd.d/tftp /srv/tftpboot/discovery/pxelinux.cfg/*"
  rm -rf $BFILES $LOGS $DEPLOYED
  popd >/dev/null
}

function purge()
{
  cleanup
  zypper -n rm `rpm -qa|grep -e crowbar -e chef -e rubygem -e susecloud` couchdb createrepo erlang rabbitmq-server sleshammer yum-common bind bind-chrootenv dhcp-server tftp
  rm -rf /opt/dell /var/log/{rabbitmq,nodes,crowbar,couchdb,chef,barclamps} /var/lib/{chef,couchdb,crowbar,dhcp,named,rabbitmq} /var/cache/chef /var/run/{chef,crowbar,named,rabbitmq} /var/chef /etc/sysconfig/{dhcpd,named,rabbitmq-server} /etc/{bind,chef,dhcp3,crowbar}
  killall epmd # need to kill again after uninstall
  echo "you need to manually restore /etc/resolv.conf"
}

function restore_files()
{
  pushd / >/dev/null
  echo "restoring from $FILE..."
  tar -xf "$FILE"
  popd >/dev/null
}

function restore()
{
  zypper -n install -l -t pattern cloud_admin
  restore_files
  screen -d -m -L /bin/bash -c "rm -f /tmp/chef-ready ; install-suse-cloud --verbose ; touch /tmp/chef-ready"
  sleep 2 # need to wait for initial deletion of chef-ready
  n=300
  while [ $n -gt 0 ] && [ ! -e /tmp/chef-ready ] ; do
    n=$(expr $n - 1)
    sleep 5;
    echo -n .
  done
  if [ $n = 0 ] ; then
    echo "timed out waiting for chef-ready"
    exit 83
  fi
  rccouchdb stop
  restore_files
  rccouchdb start
  sleep 20 # wait for couchdb before restarting chef-server
  rcchef-server restart
  chef-client
}

function help()
{
  echo "usage: $0 [help|backup|restore] <FILE>"
  echo
  echo " backup <FILE>"
  echo "     create a backup tarball of admin node config data in <FILE>"
  echo " restore <FILE>"
  echo "     restore a backup of an admin node config from tarball <FILE>"
}

FILE=${2:-/tmp/backup-crowbar.tar.gz}

$@
